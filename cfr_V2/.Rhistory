cases = inferredDaySamplesCases,
new_cases = inferredDaySamplesNewCases)
allTogetherInferred <- data.frame(date = inferredRealTimeFrame$date,
cases = inferredRealTimeFrame$cases,
deaths = cumulativeTogetherTimeSeries$deaths[2:length(cumulativeTogetherTimeSeries$deaths)],
new_cases = inferredRealTimeFrame$new_cases,
new_deaths = incidenceBothTimeSeries$new_deaths)
source("R/cCFR_calculation.R")
cCFRTimeSeriesReal <- output_cfr_timeseries(allTogetherReal)
cCFRTimeSeriesRealConstrained <- subset(cCFRTimeSeriesReal, known_outcomes > deaths & deaths > 0 & known_outcomes > 0)
cfrPointEstimateReal <- output_estimates(allTogetherReal)
cCFRTimeSeriesInferred <- output_cfr_timeseries(allTogetherInferred)
cCFRTimeSeriesInferredConstrained <- subset(cCFRTimeSeriesInferred, known_outcomes > deaths & deaths > 0 & known_outcomes > 0)
cCFRPointEstimateInferred <- output_estimates(allTogetherInferred)
allTogetherInferredConstrained <- subset(allTogetherInferred, cases > deaths)
nCFRRealCIs <- calculate_CIs_nCFR(allTogetherReal)
nCFRInferredCIs <- calculate_CIs_nCFR(allTogetherInferredConstrained)
cCFRRealCIs <- calculate_CIs_cCFR(cCFRTimeSeriesRealConstrained)
cCFRInferredCIs <- calculate_CIs_cCFR(cCFRTimeSeriesInferredConstrained)
inferredDatesConstrained <- subset(allTogetherReal, deaths >= 192)$date
dev.off()
layout(matrix(c(1, 1,
2, 3),
nrow=2, byrow=TRUE))
# cCFR plot - top panel - real case data
start1 <- 10
end1 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherReal$date[start1:end1],
nCFRRealCIs[start1:end1,1],
ui=nCFRRealCIs[start1:end1,3],
li=nCFRRealCIs[start1:end1,2], xlab = "Date", ylab = "nCFR (%)", ylim = c(3.75, 11.25))
lines(x = allTogetherReal$date[start1:end1], nCFRRealCIs[start1:end1,1], col = rgb(0.8, 0.2, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
par(new=T)
start2 <- 10
end2 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherInferred$date[start2:end2],
nCFRInferredCIs[start2:end2,1],
ui=nCFRInferredCIs[start2:end2,3],
li=nCFRInferredCIs[start2:end2,2], xlab = "Date", ylab = "nCFR (%)", xaxt='n', ylim = c(0, 0.02))
lines(x = allTogetherInferred$date[start2:end2], nCFRInferredCIs[start2:end2,1], col = rgb(0.2, 0.8, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
legend(allTogetherReal$date[end1 - 6], 7, legend=c("nCFR using real Wuhan data", "nCFR using inferred Wuhan data"), col=c(rgb(0.8, 0.2, 0.6), rgb(0.2, 0.8, 0.6)), lty=1:2, cex=0.8)
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherInferred$date[start2:end2],
nCFRInferredCIs[start2:end2,1],
ui=nCFRInferredCIs[start2:end2,3],
li=nCFRInferredCIs[start2:end2,2], xlab = "Date", ylab = "nCFR (%)", xaxt='n', ylim = c(0, 0.02))
lines(x = allTogetherInferred$date[start2:end2], nCFRInferredCIs[start2:end2,1], col = rgb(0.2, 0.8, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
legend(allTogetherReal$date[end1 - 6], 7, legend=c("nCFR using real Wuhan data", "nCFR using inferred Wuhan data"), col=c(rgb(0.8, 0.2, 0.6), rgb(0.2, 0.8, 0.6)), lty=1:2, cex=0.8)
nCFRInferredCIs
par(new=T)
start2 <- 10
end2 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherInferred$date[start2:end2],
nCFRInferredCIs[start2:end2,1],
ui=nCFRInferredCIs[start2:end2,3],
li=nCFRInferredCIs[start2:end2,2], xlab = "Date", ylab = "nCFR (%)", xaxt='n', ylim = c(0, 0.1))
lines(x = allTogetherInferred$date[start2:end2], nCFRInferredCIs[start2:end2,1], col = rgb(0.2, 0.8, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
legend(allTogetherReal$date[end1 - 6], 7, legend=c("nCFR using real Wuhan data", "nCFR using inferred Wuhan data"), col=c(rgb(0.8, 0.2, 0.6), rgb(0.2, 0.8, 0.6)), lty=1:2, cex=0.8)
par(new=T)
start2 <- 10
end2 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherInferred$date[start2:end2],
nCFRInferredCIs[start2:end2,1],
ui=nCFRInferredCIs[start2:end2,3],
li=nCFRInferredCIs[start2:end2,2], xlab = "Date", ylab = "nCFR (%)", xaxt='n', ylim = c(0, 1))
lines(x = allTogetherInferred$date[start2:end2], nCFRInferredCIs[start2:end2,1], col = rgb(0.2, 0.8, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
legend(allTogetherReal$date[end1 - 6], 7, legend=c("nCFR using real Wuhan data", "nCFR using inferred Wuhan data"), col=c(rgb(0.8, 0.2, 0.6), rgb(0.2, 0.8, 0.6)), lty=1:2, cex=0.8)
dev.off()
start2 <- 10
end2 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherInferred$date[start2:end2],
nCFRInferredCIs[start2:end2,1],
ui=nCFRInferredCIs[start2:end2,3],
li=nCFRInferredCIs[start2:end2,2], xlab = "Date", ylab = "nCFR (%)", xaxt='n', ylim = c(0, 1))
lines(x = allTogetherInferred$date[start2:end2], nCFRInferredCIs[start2:end2,1], col = rgb(0.2, 0.8, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
legend(allTogetherReal$date[end1 - 6], 7, legend=c("nCFR using real Wuhan data", "nCFR using inferred Wuhan data"), col=c(rgb(0.8, 0.2, 0.6), rgb(0.2, 0.8, 0.6)), lty=1:2, cex=0.8)
dev.off()
layout(matrix(c(1, 1,
2, 3),
nrow=2, byrow=TRUE))
# cCFR plot - top panel - real case data
start1 <- 12
end1 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherReal$date[start1:end1],
nCFRRealCIs[start1:end1,1],
ui=nCFRRealCIs[start1:end1,3],
li=nCFRRealCIs[start1:end1,2], xlab = "Date", ylab = "nCFR (%)", ylim = c(0, 6))
lines(x = allTogetherReal$date[start1:end1], nCFRRealCIs[start1:end1,1], col = rgb(0.8, 0.2, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
par(new=T)
start2 <- 12
end2 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherInferred$date[start2:end2],
nCFRInferredCIs[start2:end2,1],
ui=nCFRInferredCIs[start2:end2,3],
li=nCFRInferredCIs[start2:end2,2], xlab = "Date", ylab = "nCFR (%)", xaxt='n', ylim = c(0, 6))
lines(x = allTogetherInferred$date[start2:end2], nCFRInferredCIs[start2:end2,1], col = rgb(0.2, 0.8, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
legend(allTogetherReal$date[end1 - 6], 7, legend=c("nCFR using real Wuhan data", "nCFR using inferred Wuhan data"), col=c(rgb(0.8, 0.2, 0.6), rgb(0.2, 0.8, 0.6)), lty=1:2, cex=0.8)
dev.off()
layout(matrix(c(1, 1,
2, 3),
nrow=2, byrow=TRUE))
# cCFR plot - top panel - real case data
start1 <- 12
end1 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherReal$date[start1:end1],
nCFRRealCIs[start1:end1,1],
ui=nCFRRealCIs[start1:end1,3],
li=nCFRRealCIs[start1:end1,2], xlab = "Date", ylab = "nCFR (%)", ylim = c(0, 7))
lines(x = allTogetherReal$date[start1:end1], nCFRRealCIs[start1:end1,1], col = rgb(0.8, 0.2, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
par(new=T)
start2 <- 12
end2 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherInferred$date[start2:end2],
nCFRInferredCIs[start2:end2,1],
ui=nCFRInferredCIs[start2:end2,3],
li=nCFRInferredCIs[start2:end2,2], xlab = "Date", ylab = "nCFR (%)", xaxt='n', ylim = c(0, 7))
lines(x = allTogetherInferred$date[start2:end2], nCFRInferredCIs[start2:end2,1], col = rgb(0.2, 0.8, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
legend(allTogetherReal$date[end1 - 6], 7, legend=c("nCFR using real Wuhan data", "nCFR using inferred Wuhan data"), col=c(rgb(0.8, 0.2, 0.6), rgb(0.2, 0.8, 0.6)), lty=1:2, cex=0.8)
# Data scraped from the dxy.cn, which is generated using official and publicly
# available information released by Chinaâ€™s National Health Commission, local health
# commissions (on the province, prefecture, and county levels), and other government
# agencies and is updated multiple times daily
# loading in real case data for all of Hubei,
# real death data for all of China and
# inferred data from Kucharski et al. (2020)
# "Early dynamics of transmission and control of COVID-19"
# in that order
caseDataRaw <- readRDS("~/Documents/lshtm/nCoV2019/case_data/hubei_confirmed.rds")
deathDataRaw <- readRDS("~/Documents/lshtm/nCoV2019/case_data/all_death_prf.rds")
load("~/Documents/lshtm/github repos/2020-ncov/stoch_model/outputs/bootstrap_fit_1.RData")
# setting dates and date ranges
# first case
startDate <- as.Date("2019-11-22")
# period forecasted ahead to in Kuchaski et al. (2020), where the inferred incidence data is taken from
endDate <- as.Date("2020-03-01")
# allowing for incidence data time frame, which will always be one shorter
startDateIncidence <- startDate + 1
# for numerical use of the time difference
tPeriod <- as.numeric(endDate - startDate)
# creating a vector the time range for plots of cumulativecases/deaths
dateRange <- seq(startDate, endDate,1)
# creating a vector the time range for plots of incidence of cases/deaths
dateRangeMinusOne <- seq(startDateIncidence, endDate,1)
# extracting Wuhan data from all of Hubei dataset, using city code 420100.
cumulativeCaseTimeSeries <- data.frame(date = caseDataRaw$date[caseDataRaw$CNTY_CODE==420100],
cases = caseDataRaw$total_case[caseDataRaw$CNTY_CODE==420100])
cumulativeDeathTimeSeries <- data.frame(date = deathDataRaw$date[deathDataRaw$CNTY_CODE==420100],
deaths = deathDataRaw$fatality[deathDataRaw$CNTY_CODE==420100])
# calculating real incidence of cases and deaths
extra_entry <- data.frame(date = as.Date("2020-01-20"), cases = 240)
# add missing row in case data
cumulativeCaseTimeSeries <- rbind(cumulativeCaseTimeSeries, extra_entry)
# reordering the time series by date
cumulativeCaseTimeSeries <- cumulativeCaseTimeSeries[order(as.Date(cumulativeCaseTimeSeries$date, format="%d/%m/%Y")),]
cumulativeCaseTimeSeries <- subset(cumulativeCaseTimeSeries, date <= tail(cumulativeDeathTimeSeries$date, n = 1))
# extracting only the relevant time period given slight differences in start date of both datasets
cumulativeDeathTimeSeries <- subset(cumulativeDeathTimeSeries,
date >= cumulativeCaseTimeSeries[1,1])
# just merging deaths and cases into one data frame
cumulativeTogetherTimeSeries <- data.frame(date = cumulativeCaseTimeSeries$date,
cases = cumulativeCaseTimeSeries$cases,
deaths = cumulativeDeathTimeSeries$deaths)
# calcuating incidence of cases and deaths
new_deaths_tmp <-  diff(cumulativeDeathTimeSeries$deaths)
new_cases_tmp  <-  diff(cumulativeCaseTimeSeries$cases)
# putting incidence together
incidenceBothTimeSeries <- data.frame(date =cumulativeDeathTimeSeries$date[2:length(cumulativeDeathTimeSeries$date)], new_cases = new_cases_tmp, new_deaths = new_deaths_tmp)
allTogetherReal <- data.frame(date = cumulativeTogetherTimeSeries$date[2:length(cumulativeTogetherTimeSeries$date)],
cases = cumulativeTogetherTimeSeries$cases[2:length(cumulativeTogetherTimeSeries$cases)],
deaths = cumulativeTogetherTimeSeries$deaths[2:length(cumulativeTogetherTimeSeries$deaths)],
new_cases = incidenceBothTimeSeries$new_cases,
new_deaths = incidenceBothTimeSeries$new_deaths)
# the same cleaning but for the inferred data
thetaLocalRepProp <-  0.5 # from Kucharski et al. (2020), scaling factor
cumulativeCasesInferredtmp <- cumsum(rowMeans(C_local_plot, na.rm = TRUE))
cumulativeCasesInferred <- cumulativeCasesInferredtmp/thetaLocalRepProp
cumulativeCasesInferredDF <- data.frame(date = dateRange, cases = round(cumulativeCasesInferred))
incidenceCasesInferredDF <- data.frame(date = dateRangeMinusOne, new_cases = round(diff(cumulativeCasesInferredDF$cases)))
dailyCumulativeCasesInferred <- cumulativeCasesInferredDF$cases[seq(1, length(cumulativeCasesInferredDF$cases), 4)]
dailyIncidenceCasesInferred <- incidenceCasesInferredDF$new_cases[seq(1, length(incidenceCasesInferredDF$new_cases), 4)]
inferredCasesDF <- data.frame(date = dateRangeMinusOne,
cases = cumulativeCasesInferredDF$cases[2:length(cumulativeCasesInferredDF$cases)],
new_cases = incidenceCasesInferredDF$new_cases)
inferredDaySamplesCases <- inferredCasesDF$cases[seq(1, length(inferredCasesDF$cases), 4)]
inferredDaySamplesNewCases <- inferredCasesDF$new_cases[seq(1, length(inferredCasesDF$new_cases), 4)]
inferredRealTimeFrame <- subset(inferredCasesDF, date >= head(allTogetherReal$date, n = 1) &
date <= tail(allTogetherReal$date, n = 1))
#dateRangeInferred <- seq(as.Date("2020-01-18"), as.Date("2020-02-11"), 1)
inferredCasesDFTime <- data.frame(date = dateRangeInferred,
cases = inferredDaySamplesCases,
new_cases = inferredDaySamplesNewCases)
#allTogetherInferred <- data.frame(date = inferredCasesDFTime$date,
#                                  cases = inferredCasesDFTime$cases,
#                                  deaths = cumulativeTogetherTimeSeries$deaths[4:length(cumulativeTogetherTimeSeries$deaths)],
#                                  new_cases = inferredCasesDFTime$new_cases,
#                                  new_deaths = incidenceBothTimeSeries$new_deaths[3:length(incidenceBothTimeSeries$new_deaths)])#
allTogetherInferred <- data.frame(date = inferredRealTimeFrame$date,
cases = inferredRealTimeFrame$cases,
deaths = cumulativeTogetherTimeSeries$deaths[2:length(cumulativeTogetherTimeSeries$deaths)],
new_cases = inferredRealTimeFrame$new_cases,
new_deaths = incidenceBothTimeSeries$new_deaths)
source("R/cCFR_calculation.R")
cCFRTimeSeriesReal <- output_cfr_timeseries(allTogetherReal)
cCFRTimeSeriesRealConstrained <- subset(cCFRTimeSeriesReal, known_outcomes > deaths & deaths > 0 & known_outcomes > 0)
cfrPointEstimateReal <- output_estimates(allTogetherReal)
cCFRTimeSeriesInferred <- output_cfr_timeseries(allTogetherInferred)
cCFRTimeSeriesInferredConstrained <- subset(cCFRTimeSeriesInferred, known_outcomes > deaths & deaths > 0 & known_outcomes > 0)
cCFRPointEstimateInferred <- output_estimates(allTogetherInferred)
allTogetherInferredConstrained <- subset(allTogetherInferred, cases > deaths)
nCFRRealCIs <- calculate_CIs_nCFR(allTogetherReal)
nCFRInferredCIs <- calculate_CIs_nCFR(allTogetherInferredConstrained)
cCFRRealCIs <- calculate_CIs_cCFR(cCFRTimeSeriesRealConstrained)
cCFRInferredCIs <- calculate_CIs_cCFR(cCFRTimeSeriesInferredConstrained)
inferredDatesConstrained <- subset(allTogetherReal, deaths >= 192)$date
dev.off()
layout(matrix(c(1, 1,
2, 3),
nrow=2, byrow=TRUE))
# cCFR plot - top panel - real case data
start1 <- 12
end1 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherReal$date[start1:end1],
nCFRRealCIs[start1:end1,1],
ui=nCFRRealCIs[start1:end1,3],
li=nCFRRealCIs[start1:end1,2], xlab = "Date", ylab = "nCFR (%)", ylim = c(0, 7))
lines(x = allTogetherReal$date[start1:end1], nCFRRealCIs[start1:end1,1], col = rgb(0.8, 0.2, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
par(new=T)
start2 <- 12
end2 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherInferred$date[start2:end2],
nCFRInferredCIs[start2:end2,1],
ui=nCFRInferredCIs[start2:end2,3],
li=nCFRInferredCIs[start2:end2,2], xlab = "Date", ylab = "nCFR (%)", xaxt='n', ylim = c(0, 7))
lines(x = allTogetherInferred$date[start2:end2], nCFRInferredCIs[start2:end2,1], col = rgb(0.2, 0.8, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
legend(allTogetherReal$date[end1 - 6], 7, legend=c("nCFR using real Wuhan data", "nCFR using inferred Wuhan data"), col=c(rgb(0.8, 0.2, 0.6), rgb(0.2, 0.8, 0.6)), lty=1:2, cex=0.8)
# Data scraped from the dxy.cn, which is generated using official and publicly
# available information released by Chinaâ€™s National Health Commission, local health
# commissions (on the province, prefecture, and county levels), and other government
# agencies and is updated multiple times daily
# loading in real case data for all of Hubei,
# real death data for all of China and
# inferred data from Kucharski et al. (2020)
# "Early dynamics of transmission and control of COVID-19"
# in that order
caseDataRaw <- readRDS("~/Documents/lshtm/nCoV2019/case_data/hubei_confirmed.rds")
deathDataRaw <- readRDS("~/Documents/lshtm/nCoV2019/case_data/all_death_prf.rds")
load("~/Documents/lshtm/github repos/2020-ncov/stoch_model/outputs/bootstrap_fit_1.RData")
# setting dates and date ranges
# first case
startDate <- as.Date("2019-11-22")
# period forecasted ahead to in Kuchaski et al. (2020), where the inferred incidence data is taken from
endDate <- as.Date("2020-03-01")
# allowing for incidence data time frame, which will always be one shorter
startDateIncidence <- startDate + 1
# for numerical use of the time difference
tPeriod <- as.numeric(endDate - startDate)
# creating a vector the time range for plots of cumulativecases/deaths
dateRange <- seq(startDate, endDate,1)
# creating a vector the time range for plots of incidence of cases/deaths
dateRangeMinusOne <- seq(startDateIncidence, endDate,1)
# extracting Wuhan data from all of Hubei dataset, using city code 420100.
cumulativeCaseTimeSeries <- data.frame(date = caseDataRaw$date[caseDataRaw$CNTY_CODE==420100],
cases = caseDataRaw$total_case[caseDataRaw$CNTY_CODE==420100])
cumulativeDeathTimeSeries <- data.frame(date = deathDataRaw$date[deathDataRaw$CNTY_CODE==420100],
deaths = deathDataRaw$fatality[deathDataRaw$CNTY_CODE==420100])
# calculating real incidence of cases and deaths
extra_entry <- data.frame(date = as.Date("2020-01-20"), cases = 240)
# add missing row in case data
cumulativeCaseTimeSeries <- rbind(cumulativeCaseTimeSeries, extra_entry)
# reordering the time series by date
cumulativeCaseTimeSeries <- cumulativeCaseTimeSeries[order(as.Date(cumulativeCaseTimeSeries$date, format="%d/%m/%Y")),]
cumulativeCaseTimeSeries <- subset(cumulativeCaseTimeSeries, date <= tail(cumulativeDeathTimeSeries$date, n = 1))
# extracting only the relevant time period given slight differences in start date of both datasets
cumulativeDeathTimeSeries <- subset(cumulativeDeathTimeSeries,
date >= cumulativeCaseTimeSeries[1,1])
# just merging deaths and cases into one data frame
cumulativeTogetherTimeSeries <- data.frame(date = cumulativeCaseTimeSeries$date,
cases = cumulativeCaseTimeSeries$cases,
deaths = cumulativeDeathTimeSeries$deaths)
# calcuating incidence of cases and deaths
new_deaths_tmp <-  diff(cumulativeDeathTimeSeries$deaths)
new_cases_tmp  <-  diff(cumulativeCaseTimeSeries$cases)
# putting incidence together
incidenceBothTimeSeries <- data.frame(date =cumulativeDeathTimeSeries$date[2:length(cumulativeDeathTimeSeries$date)], new_cases = new_cases_tmp, new_deaths = new_deaths_tmp)
allTogetherReal <- data.frame(date = cumulativeTogetherTimeSeries$date[2:length(cumulativeTogetherTimeSeries$date)],
cases = cumulativeTogetherTimeSeries$cases[2:length(cumulativeTogetherTimeSeries$cases)],
deaths = cumulativeTogetherTimeSeries$deaths[2:length(cumulativeTogetherTimeSeries$deaths)],
new_cases = incidenceBothTimeSeries$new_cases,
new_deaths = incidenceBothTimeSeries$new_deaths)
# the same cleaning but for the inferred data
thetaLocalRepProp <-  1 # from Kucharski et al. (2020), scaling factor
cumulativeCasesInferredtmp <- cumsum(rowMeans(C_local_plot, na.rm = TRUE))
cumulativeCasesInferred <- cumulativeCasesInferredtmp/thetaLocalRepProp
cumulativeCasesInferredDF <- data.frame(date = dateRange, cases = round(cumulativeCasesInferred))
incidenceCasesInferredDF <- data.frame(date = dateRangeMinusOne, new_cases = round(diff(cumulativeCasesInferredDF$cases)))
dailyCumulativeCasesInferred <- cumulativeCasesInferredDF$cases[seq(1, length(cumulativeCasesInferredDF$cases), 4)]
dailyIncidenceCasesInferred <- incidenceCasesInferredDF$new_cases[seq(1, length(incidenceCasesInferredDF$new_cases), 4)]
inferredCasesDF <- data.frame(date = dateRangeMinusOne,
cases = cumulativeCasesInferredDF$cases[2:length(cumulativeCasesInferredDF$cases)],
new_cases = incidenceCasesInferredDF$new_cases)
inferredDaySamplesCases <- inferredCasesDF$cases[seq(1, length(inferredCasesDF$cases), 4)]
inferredDaySamplesNewCases <- inferredCasesDF$new_cases[seq(1, length(inferredCasesDF$new_cases), 4)]
inferredRealTimeFrame <- subset(inferredCasesDF, date >= head(allTogetherReal$date, n = 1) &
date <= tail(allTogetherReal$date, n = 1))
#dateRangeInferred <- seq(as.Date("2020-01-18"), as.Date("2020-02-11"), 1)
inferredCasesDFTime <- data.frame(date = dateRangeInferred,
cases = inferredDaySamplesCases,
new_cases = inferredDaySamplesNewCases)
#allTogetherInferred <- data.frame(date = inferredCasesDFTime$date,
#                                  cases = inferredCasesDFTime$cases,
#                                  deaths = cumulativeTogetherTimeSeries$deaths[4:length(cumulativeTogetherTimeSeries$deaths)],
#                                  new_cases = inferredCasesDFTime$new_cases,
#                                  new_deaths = incidenceBothTimeSeries$new_deaths[3:length(incidenceBothTimeSeries$new_deaths)])#
allTogetherInferred <- data.frame(date = inferredRealTimeFrame$date,
cases = inferredRealTimeFrame$cases,
deaths = cumulativeTogetherTimeSeries$deaths[2:length(cumulativeTogetherTimeSeries$deaths)],
new_cases = inferredRealTimeFrame$new_cases,
new_deaths = incidenceBothTimeSeries$new_deaths)
source("R/cCFR_calculation.R")
cCFRTimeSeriesReal <- output_cfr_timeseries(allTogetherReal)
cCFRTimeSeriesRealConstrained <- subset(cCFRTimeSeriesReal, known_outcomes > deaths & deaths > 0 & known_outcomes > 0)
cfrPointEstimateReal <- output_estimates(allTogetherReal)
cCFRTimeSeriesInferred <- output_cfr_timeseries(allTogetherInferred)
cCFRTimeSeriesInferredConstrained <- subset(cCFRTimeSeriesInferred, known_outcomes > deaths & deaths > 0 & known_outcomes > 0)
cCFRPointEstimateInferred <- output_estimates(allTogetherInferred)
allTogetherInferredConstrained <- subset(allTogetherInferred, cases > deaths)
nCFRRealCIs <- calculate_CIs_nCFR(allTogetherReal)
nCFRInferredCIs <- calculate_CIs_nCFR(allTogetherInferredConstrained)
cCFRRealCIs <- calculate_CIs_cCFR(cCFRTimeSeriesRealConstrained)
cCFRInferredCIs <- calculate_CIs_cCFR(cCFRTimeSeriesInferredConstrained)
inferredDatesConstrained <- subset(allTogetherReal, deaths >= 192)$date
dev.off()
layout(matrix(c(1, 1,
2, 3),
nrow=2, byrow=TRUE))
# cCFR plot - top panel - real case data
start1 <- 12
end1 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherReal$date[start1:end1],
nCFRRealCIs[start1:end1,1],
ui=nCFRRealCIs[start1:end1,3],
li=nCFRRealCIs[start1:end1,2], xlab = "Date", ylab = "nCFR (%)", ylim = c(0, 7))
lines(x = allTogetherReal$date[start1:end1], nCFRRealCIs[start1:end1,1], col = rgb(0.8, 0.2, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
par(new=T)
start2 <- 12
end2 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherInferred$date[start2:end2],
nCFRInferredCIs[start2:end2,1],
ui=nCFRInferredCIs[start2:end2,3],
li=nCFRInferredCIs[start2:end2,2], xlab = "Date", ylab = "nCFR (%)", xaxt='n', ylim = c(0, 7))
lines(x = allTogetherInferred$date[start2:end2], nCFRInferredCIs[start2:end2,1], col = rgb(0.2, 0.8, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
legend(allTogetherReal$date[end1 - 6], 7, legend=c("nCFR using real Wuhan data", "nCFR using inferred Wuhan data"), col=c(rgb(0.8, 0.2, 0.6), rgb(0.2, 0.8, 0.6)), lty=1:2, cex=0.8)
dev.off()
layout(matrix(c(1, 1,
2, 3,
4, 5),
nrow=3, byrow=TRUE))
start1 <- 1
end1 <- 11
ymin <- 0
ymax <- 95
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherReal$date[start1:end1],
cCFRRealCIs[start1:end1,1],
ui=cCFRRealCIs[start1:end1,3],
li=cCFRRealCIs[start1:end1,2], xlab = "Date", ylab = "cCFR (%)", ylim = c(ymin, ymax))
lines(x = allTogetherReal$date[start1:end1], cCFRRealCIs[start1:end1,1], col = rgb(0.8, 0.2, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
par(new=T)
start2 <- 2
end2 <- 12
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = cCFRInferredTimeSeries$date,
cCFRInferredTimeSeries[,2],
ui = cCFRInferredTimeSeries[,4],
li = cCFRInferredTimeSeries[,3], xlab = "Date", ylab = "cCFR (%)", ylim = c(ymin, ymax))
lines(x = cCFRInferredTimeSeries$date, cCFRInferredTimeSeries$CI_mid, col = rgb(0.2, 0.8, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
dev.off()
layout(matrix(c(1, 1,
2, 3,
4, 5),
nrow=3, byrow=TRUE))
start1 <- 10
end1 <- 50
ymin <- 0
ymax <- 95
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherReal$date[start1:end1],
cCFRRealCIs[start1:end1,1],
ui=cCFRRealCIs[start1:end1,3],
li=cCFRRealCIs[start1:end1,2], xlab = "Date", ylab = "cCFR (%)", ylim = c(ymin, ymax))
lines(x = allTogetherReal$date[start1:end1], cCFRRealCIs[start1:end1,1], col = rgb(0.8, 0.2, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
par(new=T)
cCFRRealCIs
cCFRRealCIs <- calculate_CIs_cCFR(cCFRTimeSeriesReal)
cCFRInferredCIs <- calculate_CIs_cCFR(cCFRTimeSeriesInferred)
cCFRTimeSeriesInferred
cCFRTimeSeriesInferred$cCFR
allTogetherInferred
cCFRTimeSeriesInferred <- output_cfr_timeseries(allTogetherInferredEarly)
start1 <- 12
end1 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherReal$date[start1:end1],
nCFRRealCIs[start1:end1,1],
ui=nCFRRealCIs[start1:end1,3],
li=nCFRRealCIs[start1:end1,2], xlab = "Date", ylab = "nCFR (%)", ylim = c(0, 7))
lines(x = allTogetherReal$date[start1:end1], nCFRRealCIs[start1:end1,1], col = rgb(0.8, 0.2, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
par(new=T)
start2 <- 12
end2 <- 60
par(mar=c(3,3,1,1),mgp=c(2,0.6,0))
plotCI(x = allTogetherInferred$date[start2:end2],
nCFRInferredCIs[start2:end2,1],
ui=nCFRInferredCIs[start2:end2,3],
li=nCFRInferredCIs[start2:end2,2], xlab = "Date", ylab = "nCFR (%)", xaxt='n', ylim = c(0, 7))
lines(x = allTogetherInferred$date[start2:end2], nCFRInferredCIs[start2:end2,1], col = rgb(0.2, 0.8, 0.6))
grid(ny = NULL, nx = 0, col = rgb(0.9,0.9,0.9), lty = "solid")
legend(al
allTogetherReal
allTogetherReal
sdfsdf
allTogetherReal
earlyOutbreak <- read.csv("~/Documents/lshtm/CFR/data/early_outbreak.csv")
earlyOutbreak
allTogetherReal
earlyOutbreak <- read.csv("~/Documents/lshtm/CFR/data/early_outbreak.csv")
earlyOutbreak
allTogetherReal
rbind(earlyOutbreak,allTogetherReal)
allTogetherReal)
allTogetherReal
earlyOutbreak <- data.frame(read.csv("~/Documents/lshtm/CFR/data/early_outbreak.csv"))
rbind(earlyOutbreak,allTogetherReal)
earlyOutbreak <- data.frame(read.csv("~/Documents/lshtm/CFR/data/early_outbreak.csv"),stringsAsFactors = FALSE)
rbind(earlyOutbreak,allTogetherReal)
allTogetherReal <- data.frame(date = cumulativeTogetherTimeSeries$date[2:length(cumulativeTogetherTimeSeries$date)],
cases = cumulativeTogetherTimeSeries$cases[2:length(cumulativeTogetherTimeSeries$cases)],
deaths = cumulativeTogetherTimeSeries$deaths[2:length(cumulativeTogetherTimeSeries$deaths)],
new_cases = incidenceBothTimeSeries$new_cases,
new_deaths = incidenceBothTimeSeries$new_deaths,stringsAsFactors = FALSE)
rbind(earlyOutbreak,allTogetherReal)
earlyOutbreak <- data.frame(read.csv("~/Documents/lshtm/CFR/data/early_outbreak.csv"), header = TRUE, stringsAsFactors = FALSE)
rbind(earlyOutbreak,allTogetherReal)
earlyOutbreak
earlyOutbreak <- data.frame(read.csv("~/Documents/lshtm/CFR/data/early_outbreak.csv"), row.names = FALSE)
earlyOutbreak <- data.frame(read.csv("~/Documents/lshtm/CFR/data/early_outbreak.csv"), row.names = NULL)
allTogetherReal <- data.frame(date = cumulativeTogetherTimeSeries$date[2:length(cumulativeTogetherTimeSeries$date)],
cases = cumulativeTogetherTimeSeries$cases[2:length(cumulativeTogetherTimeSeries$cases)],
deaths = cumulativeTogetherTimeSeries$deaths[2:length(cumulativeTogetherTimeSeries$deaths)],
new_cases = incidenceBothTimeSeries$new_cases,
new_deaths = incidenceBothTimeSeries$new_death)
rbind(earlyOutbreak,allTogetherReal)
earlyOutbreak
rownames(earlyOutbreak) <- c()
earlyOutbreak
allTogetherReal
allTogetherReal
earlyOutbreak <- data.frame(read.csv("~/Documents/lshtm/CFR/data/early_outbreak.csv"), row.names = NULL)
earlyOutbreak
allTogetherReal
cumsum(earlyOutbreak$new_cases)
caseDataRaw
subset(caseDataRaw, CNTY_CODE == "420100"
)
wuhanData <- subset(caseDataRaw, CNTY_CODE == "420100")
wuhanData
length(wuhanData)
length(wuhanData[,3])
length(wuhanData[3,])
din(wuhanData)
dim(wuhanData)
plot(wuhanData$total_case)
plot(wuhanData$date wuhanData$total_case)
plot(wuhanData$date, wuhanData$total_case)
subset(earlyOutbreak, date < 2020-11-01)
subset(earlyOutbreak, date < "2020-11-01")
subset(earlyOutbreak, date < as.Date(2020-11-01)
)
subset(earlyOutbreak, date < as.Date("2020-11-01"))
allTogetherReal
shiny::runApp('~/Documents/lshtm/hospital_capacity/hospital_capacity')
