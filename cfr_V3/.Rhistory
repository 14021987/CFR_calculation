source("R/read_data.R")
source("R/cCFR_calculation.R")
source("R/plotting_functions.R")
master_plot(allTogether, 1, 1, "topright", onset_to_death_truncated)
master_plot(allTogether, 1, 1, "topright", onset_to_death)
source("R/plotting_functions.R")
master_plot(allTogether, 1, 1, "topright", onset_to_death, onset_to_death_truncated)
source("R/plotting_functions.R")
master_plot(allTogether, 1, 1, "topright", onset_to_death, onset_to_death_truncated)
output_estimates <- cCFR_with_CIs_main_time_series(allTogether, onset_to_death_truncated)
output_estimates
output_estimates <- cCFR_with_CIs_main_time_series(allTogether, onset_to_death)
output_estimates
library(lubridate)
library(bbmle)
library(plotrix)
library(fitdistrplus)
library(padr)
scaled_reporting <- 0.1
######### parameterising the delay distributions (taken from papers) ############
# Estimating distribution from onset of symptoms to death
# Linton et al. (https://doi.org/10.3390/jcm9020538)
zmeanOD <- 14.5
zsdOD <- 6.7
zmedianOD <- 13.2
muOD <- log(zmedianOD)
sigmaOD <- sqrt(2*(log(zmeanOD) - muOD))
onset_to_death <- function(x)
{
dlnorm(x, muOD, sigmaOD)
}
zmeanODT <- 20.2
zsdODT <- 11.6
zmedian <- 17.1
muODT <- log(zmedianODT)
sigmaODT <- sqrt( 2*(log(zmeanODT) - muODT))
onset_to_death_truncated <- function(x)
{
dlnorm(x, muODT, sigmaODT)
}
zmeanHD <- 8.6
zsdHD <- 6.7
zmedianHD <- 6.7
muHD <- log(zmedianHD)
sigmaHD <- sqrt(2*(log(zmeanHD) - muHD))
hospitalisation_to_death <- function(x)
{
dlnorm(x, muHD, sigmaHD)
}
zmeanHDT <- 13
zsdHDT <- 12.7
zmedianHDT <- 9.1
muHDT <- log(zmedianHDT)
sigmaHDT <- sqrt(2*(log(zmeanHDT) - muHDT))
hospitalisation_to_death_truncated <- function(x)
{
dlnorm(x, muHDT, sigmaHDT)
}
source("R/read_data.R")
source("R/cCFR_calculation.R")
source("R/plotting_functions.R")
master_plot(allTogether, 1, 1, "topright", onset_to_death, onset_to_death_truncated)
output_estimates <- cCFR_with_CIs_main_time_series(allTogether, onset_to_death)
deadIndividuals <- subset(johnsData, status == "dead")
recoveredIndividuals <- subset(johnsData, status == "recovered")
aliveIndividuals <- subset(johnsData, status == "alive")
dOverDPlusR <- nrow(deadIndividuals)/(nrow(deadIndividuals) + nrow(recoveredIndividuals))
output_estimates
library(lubridate)
library(bbmle)
library(plotrix)
library(fitdistrplus)
library(padr)
scaled_reporting <- 10
######### parameterising the delay distributions (taken from papers) ############
# Estimating distribution from onset of symptoms to death
# Linton et al. (https://doi.org/10.3390/jcm9020538)
zmeanOD <- 14.5
zsdOD <- 6.7
zmedianOD <- 13.2
muOD <- log(zmedianOD)
sigmaOD <- sqrt(2*(log(zmeanOD) - muOD))
onset_to_death <- function(x)
{
dlnorm(x, muOD, sigmaOD)
}
zmeanODT <- 20.2
zsdODT <- 11.6
zmedian <- 17.1
muODT <- log(zmedianODT)
sigmaODT <- sqrt( 2*(log(zmeanODT) - muODT))
onset_to_death_truncated <- function(x)
{
dlnorm(x, muODT, sigmaODT)
}
zmeanHD <- 8.6
zsdHD <- 6.7
zmedianHD <- 6.7
muHD <- log(zmedianHD)
sigmaHD <- sqrt(2*(log(zmeanHD) - muHD))
hospitalisation_to_death <- function(x)
{
dlnorm(x, muHD, sigmaHD)
}
zmeanHDT <- 13
zsdHDT <- 12.7
zmedianHDT <- 9.1
muHDT <- log(zmedianHDT)
sigmaHDT <- sqrt(2*(log(zmeanHDT) - muHDT))
hospitalisation_to_death_truncated <- function(x)
{
dlnorm(x, muHDT, sigmaHDT)
}
source("R/read_data.R")
source("R/cCFR_calculation.R")
source("R/plotting_functions.R")
master_plot(allTogether, 1, 1, "topright", onset_to_death, onset_to_death_truncated)
output_estimates <- cCFR_with_CIs_main_time_series(allTogether, onset_to_death)
deadIndividuals <- subset(johnsData, status == "dead")
recoveredIndividuals <- subset(johnsData, status == "recovered")
aliveIndividuals <- subset(johnsData, status == "alive")
dOverDPlusR <- nrow(deadIndividuals)/(nrow(deadIndividuals) + nrow(recoveredIndividuals))
output_estimates
johnsData
min(johnsData$date_onset)
min(as.Date(johnsData$date_onset))
johnsData[!is.na(johnsData$date_onset),]
johnsData
johnsData[johnsData$status=="dead"]
johnsData[johnsData$status=="dead",]
output_estimates
library(lubridate)
library(bbmle)
library(plotrix)
library(fitdistrplus)
library(padr)
scaled_reporting <- 1
######### parameterising the delay distributions (taken from papers) ############
# Estimating distribution from onset of symptoms to death
# Linton et al. (https://doi.org/10.3390/jcm9020538)
zmeanOD <- 14.5
zsdOD <- 6.7
zmedianOD <- 13.2
muOD <- log(zmedianOD)
sigmaOD <- sqrt(2*(log(zmeanOD) - muOD))
onset_to_death <- function(x)
{
dlnorm(x, muOD, sigmaOD)
}
zmeanODT <- 20.2
zsdODT <- 11.6
zmedian <- 17.1
muODT <- log(zmedianODT)
sigmaODT <- sqrt( 2*(log(zmeanODT) - muODT))
onset_to_death_truncated <- function(x)
{
dlnorm(x, muODT, sigmaODT)
}
zmeanHD <- 8.6
zsdHD <- 6.7
zmedianHD <- 6.7
muHD <- log(zmedianHD)
sigmaHD <- sqrt(2*(log(zmeanHD) - muHD))
hospitalisation_to_death <- function(x)
{
dlnorm(x, muHD, sigmaHD)
}
zmeanHDT <- 13
zsdHDT <- 12.7
zmedianHDT <- 9.1
muHDT <- log(zmedianHDT)
sigmaHDT <- sqrt(2*(log(zmeanHDT) - muHDT))
hospitalisation_to_death_truncated <- function(x)
{
dlnorm(x, muHDT, sigmaHDT)
}
source("R/read_data.R")
source("R/cCFR_calculation.R")
source("R/plotting_functions.R")
master_plot(allTogether, 1, 1, "topright", onset_to_death, onset_to_death_truncated)
output_estimates <- cCFR_with_CIs_main_time_series(allTogether, onset_to_death)
deadIndividuals <- subset(johnsData, status == "dead")
recoveredIndividuals <- subset(johnsData, status == "recovered")
aliveIndividuals <- subset(johnsData, status == "alive")
dOverDPlusR <- nrow(deadIndividuals)/(nrow(deadIndividuals) + nrow(recoveredIndividuals))
output_estimates
library(lubridate)
library(bbmle)
library(plotrix)
library(fitdistrplus)
library(padr)
scaled_reporting <- 1
######### parameterising the delay distributions (taken from papers) ############
# Estimating distribution from onset of symptoms to death
# Linton et al. (https://doi.org/10.3390/jcm9020538)
zmeanOD <- 14.5
zsdOD <- 6.7
zmedianOD <- 13.2
muOD <- log(zmedianOD)
sigmaOD <- sqrt(2*(log(zmeanOD) - muOD))
onset_to_death <- function(x)
{
dlnorm(x, muOD, sigmaOD)
}
zmeanODT <- 20.2
zsdODT <- 11.6
zmedian <- 17.1
muODT <- log(zmedianODT)
sigmaODT <- sqrt( 2*(log(zmeanODT) - muODT))
onset_to_death_truncated <- function(x)
{
dlnorm(x, muODT, sigmaODT)
}
zmeanHD <- 8.6
zsdHD <- 6.7
zmedianHD <- 6.7
muHD <- log(zmedianHD)
sigmaHD <- sqrt(2*(log(zmeanHD) - muHD))
hospitalisation_to_death <- function(x)
{
dlnorm(x, muHD, sigmaHD)
}
zmeanHDT <- 13
zsdHDT <- 12.7
zmedianHDT <- 9.1
muHDT <- log(zmedianHDT)
sigmaHDT <- sqrt(2*(log(zmeanHDT) - muHDT))
hospitalisation_to_death_truncated <- function(x)
{
dlnorm(x, muHDT, sigmaHDT)
}
source("R/read_data.R")
source("R/cCFR_calculation.R")
source("R/plotting_functions.R")
master_plot(allTogether, 1, 1, "topright", onset_to_death, onset_to_death_truncated)
output_estimates <- cCFR_with_CIs_main_time_series(allTogether, onset_to_death_truncated)
deadIndividuals <- subset(johnsData, status == "dead")
recoveredIndividuals <- subset(johnsData, status == "recovered")
aliveIndividuals <- subset(johnsData, status == "alive")
dOverDPlusR <- nrow(deadIndividuals)/(nrow(deadIndividuals) + nrow(recoveredIndividuals))
output_estimates
johnsData
johnsData %>% nrow
2/(johnsData %>% nrow)
2/(johnsData %>% nrow) * 100
output_nCFR_estimates <- cCFR_with_CIs_main_time_series(allTogether, onset_to_death_truncated)
output_nCFR_estimates
output_nCFR_estimates <- nCFR_with_CIs_main_time_series(allTogether, onset_to_death_truncated)
output_nCFR_estimates
output_nCFR_estimates <- nCFR_with_CIs_main_time_series(allTogether)
output_cfr_timeseries(allTogether)
output_cfr_timeseries(allTogether, onset)
output_cfr_timeseries(allTogether, onset_to_death_truncated)
tmp <- output_cfr_timeseries(allTogether, onset_to_death_truncated)
tmp$naive
tmp$naive*100
johnsDataDF
johnsData <- read_csv("data/johns_data.csv")
johnsData
johnsData$age
johnsData$age
findInterval(johnsData$age, c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90))
johnsData[is.na(johnsData$age == FALSE)]
johnsData[is.na(johnsData$age == FALSE),]
johnsData[is.na(johnsData$age == TRUE),]
johnsData[is.na(johnsData$age == TRUE),]
johnsData[is.na(johnsData$age != TRUE),]
findInterval(johnsData$age, c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90))
tmp <- findInterval(johnsData$age, c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90))
count(tmp)
table(tmp)
tmp2 <- table(tmp)
tmp2[,2]
tmp2[2,]
tmp2[2]
tmp2[2]
tmp2[,1]
tmp2 %> dim
tmp2 %>% dim
sum(c(2  3 10 22 28 34  7  3  4 ))
sum(c(2,3,10,22,28,34,7,3,4 ))
tmp2/113
tmp2/113 * 100
UKageSFs <- c(0.0118, 0.0121, 0.0136, 0.0131, 0.0146, 0.0122, 0.0108, 0.071, 0.039, 0.008)
sum(UKageSFs)
sum(UKageSFs*100)
UKageSFs[1]
UKageSFs[1]*100
UKageSFs <- c(0.118, 0.121, 0.136, 0.131, 0.146, 0.122, 0.108, 0.71, 0.39, 0.08)
nCFRChina <- c(0,0.2,0.2,0.2,0.4,1.3,3.6,8,14.8)
nCFRChina
0.48 * nCFRChina
0.48 * nCFRChina * UKageSFs
nCFRChina %>% length
UKageSFs %>% length
UKageSFs <- c(0.0118, 0.0121, 0.0136, 0.0131, 0.0146, 0.0122, 0.0108, 0.071, 0.039)
0.48 * nCFRChina * UKageSFs
cisLow <-  c(0, 0, 0.1, 0.1, 0.3, 1.1, 3.2, 7.2, 13.0)
cisHigh <-  c(0.9,1,0.4,0.4,0.6,1.5,4,8.9,16.7)
0.48* nCFRChina * UKageSFs
6.1/5
2.3/5
2.3/5.15
2.2/5.15
2.2/5.
2.2/5
2.4/5
DPCFRSF <- 2.4/5
UKCFRSF <- 6.1/5
nCFRMid <- c(0,0.2,0.2,0.2,0.4,1.3,3.6,8,14.8)
data.frame(cfrMid  =  DPCFRSF * nCFRMid,
cfrLow  =  DPCFRSF * cisLow,
cfrHigh =  DPCFRSF * cisHigh)
cruise_ship_ages <- c(16,23,347, 428,334,398,923,1015,216,11)
cruise_ship_ages
sum(cruise_ship_ages)
cruise_ship_ages/sum(cruise_ship_ages)
DPageSFs <- cruise_ship_ages/sum(cruise_ship_ages)
UKageSFs <- c(0.0118, 0.0121, 0.0136, 0.0131, 0.0146, 0.0122, 0.0108, 0.071, 0.039)
diamondPrincessdata.frame(cfrMid  =  DPCFRSF * nCFRMid,
cfrLow  =  DPCFRSF * cisLow,
cfrHigh =  DPCFRSF * cisHigh)
diamondPrincessCorrectedCFR = data.frame(cfrMid  =  DPCFRSF * nCFRMid * DPageSFs,
cfrLow  =  DPCFRSF * cisLow * DPageSFs,
cfrHigh =  DPCFRSF * cisHigh * DPageSFs)
cruise_ship_ages <- c(16,23,347, 428,334,398,923,1015,216)
DPCFRSF <- 2.4/5
UKCFRSF <- 6.1/5
nCFRMid <- c(0,0.2,0.2,0.2,0.4,1.3,3.6,8,14.8)
cisLow <-  c(0, 0, 0.1, 0.1, 0.3, 1.1, 3.2, 7.2, 13.0)
cisHigh <-  c(0.9,1,0.4,0.4,0.6,1.5,4,8.9,16.7)
DPageSFs <- cruise_ship_ages/sum(cruise_ship_ages)
UKageSFs <- c(0.0118, 0.0121, 0.0136, 0.0131, 0.0146, 0.0122, 0.0108, 0.071)
diamondPrincessCorrectedCFR = data.frame(cfrMid  =  DPCFRSF * nCFRMid * DPageSFs,
cfrLow  =  DPCFRSF * cisLow * DPageSFs,
cfrHigh =  DPCFRSF * cisHigh * DPageSFs)
diamondPrincessCorrectedCFR
diamondPrincessCorrectedCFR = data.frame(cfrMid  =  DPCFRSF * nCFRMid * DPageSFs,
cfrLow  =  DPCFRSF * cisLow * DPageSFs,
cfrHigh =  DPCFRSF * cisHigh * DPageSFs)*100
diamondPrincessCorrectedCFR
DPageSFs <- cruise_ship_ages/sum(cruise_ship_ages) * 100
diamondPrincessCorrectedCFR = data.frame(cfrMid  =  DPCFRSF * nCFRMid * DPageSFs,
cfrLow  =  DPCFRSF * cisLow * DPageSFs,
cfrHigh =  DPCFRSF * cisHigh * DPageSFs)
diamondPrincessCorrectedCFR
diamondPrincessCorrectedCFR = data.frame(cfrMid  =  DPCFRSF * nCFRMid * DPageSFs,
cfrLow  =  DPCFRSF * cisLow * DPageSFs,
cfrHigh =  DPCFRSF * cisHigh * DPageSFs)
diamondPrincessCorrectedCFR
DPageSFs <- cruise_ship_ages/sum(cruise_ship_ages)
UKageSFs <- c(0.0118, 0.0121, 0.0136, 0.0131, 0.0146, 0.0122, 0.0108, 0.071)
diamondPrincessCorrectedCFR = data.frame(cfrMid  =  DPCFRSF * nCFRMid * DPageSFs,
cfrLow  =  DPCFRSF * cisLow * DPageSFs,
cfrHigh =  DPCFRSF * cisHigh * DPageSFs)
diamondPrincessCorrectedCFR
diamondPrincessCorrectedCFR = data.frame(cfrMid  = nCFRMid * DPageSFs,
cfrLow  =  cisLow * DPageSFs,
cfrHigh =  cisHigh * DPageSFs)
diamondPrincessCorrectedCFR
DPageSFs
DPageSFs
UKageSFs
diamondPrincessCorrectedCFR = data.frame(cfrMid  =  nCFRMid * DPageSFs * DPageSFs,
cfrLow  =  cisLow * DPageSFs * DPageSFs,
cfrHigh  =  cisHigh * DPageSFs * DPageSFs)
diamondPrincessCorrectedCFR
UKCorrectedCFR = data.frame(cfrMid  =  nCFRMid * UKCFRSF* UKageSFs,
cfrLow  =  cisLow  * UKCFRSF * UKageSFs,
cfrHigh  =  cisHigh * UKCFRSF * UKageSFs)
UKageSFs <- c(0.118, 0.121, 0.136, 0.131, 0.146, 0.122, 0.108, 0.71, 0.39)
UKCorrectedCFR = data.frame(cfrMid  =  nCFRMid * UKCFRSF* UKageSFs,
cfrLow  =  cisLow  * UKCFRSF * UKageSFs,
cfrHigh  =  cisHigh * UKCFRSF * UKageSFs)
UKCorrectedCFR
diamondPrincessCorrectedCFR = data.frame(cfrMid  =  nCFRMid * DPageSFs * DPageSFs,
cfrLow  =  cisLow * DPageSFs * DPageSFs,
cfrHigh  =  cisHigh * DPageSFs * DPageSFs)
diamondPrincessCorrectedCFR
diamondPrincessCorrectedCFR = data.frame(cfrMid  =  nCFRMid * DPageSFs * DPCFRSF,
cfrLow  =  cisLow * DPageSFs * DPCFRSF,
cfrHigh  =  cisHigh * DPageSFs * DPCFRSF)
diamondPrincessCorrectedCFR
UKCorrectedCFR
UKCorrectedCFR$cfrHigh
1/9
UKageSFs <- c(1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9)
UKCorrectedCFR = data.frame(cfrMid  =  nCFRMid * UKCFRSF* UKageSFs,
cfrLow  =  cisLow  * UKCFRSF * UKageSFs,
cfrHigh  =  cisHigh * UKCFRSF * UKageSFs)
UKCorrectedCFR
UKageSFs <- c(0.118, 0.121, 0.136, 0.131, 0.146, 0.122, 0.108, 0.71, 0.39)
UKCorrectedCFR = data.frame(cfrMid  =  nCFRMid * UKCFRSF* UKageSFs,
cfrLow  =  cisLow  * UKCFRSF * UKageSFs,
cfrHigh  =  cisHigh * UKCFRSF * UKageSFs)
weighted.mean(UKCorrectedCFR$cfrMid, UKageSFs)
weighted.mean(UKCorrectedCFR$cfrLow, UKageSFs)
weighted.mean(UKCorrectedCFR$cfrHigh, UKageSFs)
UKageSFs <- c(0.118, 0.121, 0.136, 0.131, 0.146, 0.122, 0.108, 0.71, 0.39)
UKCorrectedCFR = data.frame(cfrMid  =  nCFRMid * UKCFRSF* UKageSFs,
cfrLow  =  cisLow  * UKCFRSF * UKageSFs,
cfrHigh  =  cisHigh * UKCFRSF * UKageSFs)
UKCorrectedCFR
weighted.mean(UKCorrectedCFR$cfrLow, UKageSFs)
UKageSFs <- c(0.118, 0.121, 0.136, 0.131, 0.146, 0.122, 0.108, 0.071, 0.039)
UKCorrectedCFR = data.frame(cfrMid  =  nCFRMid * UKCFRSF* UKageSFs,
cfrLow  =  cisLow  * UKCFRSF * UKageSFs,
cfrHigh  =  cisHigh * UKCFRSF * UKageSFs)
UKCorrectedCFR
weighted.mean(UKCorrectedCFR$cfrLow, UKageSFs)
UKageSFs <- c(1.18, 1.21, 1.36, 1.31, 1.46, 1.22, 1.08, 0.71, 0.39)
UKCorrectedCFR = data.frame(cfrMid  =  nCFRMid * UKCFRSF* UKageSFs,
cfrLow  =  cisLow  * UKCFRSF * UKageSFs,
cfrHigh  =  cisHigh * UKCFRSF * UKageSFs)
UKCorrectedCFR
weighted.mean(UKCorrectedCFR$cfrLow, UKageSFs)
DPageSFs <- cruise_ship_ages/sum(cruise_ship_ages) * 10
diamondPrincessCorrectedCFR = data.frame(cfrMid  =  nCFRMid * DPageSFs * DPCFRSF,
cfrLow  =  cisLow * DPageSFs * DPCFRSF,
cfrHigh  =  cisHigh * DPageSFs * DPCFRSF)
3388.488 + 2442.147
3924.49 + 4119.566
3956.34 + 3686.133
4074.64 + 4484.067
4706.828 + 4588.196
4308.13 + 4296.121
4634.54 + 4538.925
3905.016 + 3381.761
3388.488 + 2442.147
1736.567 +1077.555
a1 <- 3924.49 + 4119.566
a2 <- 3956.34 + 3686.133
a3 <- 4074.64 + 4484.067
a4 <- 4706.828 + 4588.196
a5 <- 4308.13 + 4296.121
a6 <- 4634.54 + 4538.925
a7 <- 3905.016 + 3381.761
a8 <- 3388.488 + 2442.147
a9 <- 1736.567 +1077.555
#UKageSFs <- c(1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9)
nicksData <- c(a1,a2,a3,a4,a5,a6,a7,a8,a9)
nicksData %>% sum
#UKageSFs <- c(1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9)
nicksData <- c(a1,a2,a3,a4,a5,a6,a7,a8,a9)/sum(c(a1,a2,a3,a4,a5,a6,a7,a8,a9))
nicksData
weighted.mean(UKCorrectedCFR,nicksData)
nicksData
nicksData %>% length
UKCorrectedCFR %>% length
weighted.mean(UKCorrectedCFR$cfrMid,nicksData)
nicksData
#UKageSFs <- c(1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9, 1/9)
nicksData <- c(a1,a2,a3,a4,a5,a6,a7,a8,a9)
weighted.mean(UKCorrectedCFR$cfrMid,nicksData)
a1
UKCorrectedCFR
setwd("~/Documents/lshtm/github repos/CFR_calculation/cfr_V3")
library(lubridate)
library(bbmle)
library(plotrix)
library(fitdistrplus)
library(padr)
scaled_reporting <- 1.0
source("R/read_data.R")
zmean <- 14.5
zsd <- 6.7
zmedian <- 13.2
muOD <- log(zmedian)
sigmaOD <- sqrt( 2*(log(zmean) - muOD) )
onset_to_death <- function(x)
{
dlnorm(x, muOD, sigmaOD)
}
zmean <- 20.2
zsd <- 11.6
zmedian <- 17.1
muODT <- log(zmedian)
sigmaODT <- sqrt( 2*(log(zmean) - muODT) )
onset_to_death_truncated <- function(x)
{
dlnorm(x, muODT, sigmaODT)
}
zmean <- 8.6
zsd <- 6.7
zmedian <- 6.7
muHD <- log(zmedian)
sigmaHD <- sqrt( 2*(log(zmean) - muHD) )
hospitalisation_to_death <- function(x)
{
dlnorm(x, muHD, sigmaHD)
}
zmean <- 13
zsd <- 12.7
zmedian <- 9.1
muHDT <- log(zmedian)
sigmaHDT <- sqrt( 2*(log(zmean) - muHDT) )
hospitalisation_to_death_truncated <- function(x)
{
dlnorm(x, muHDT, sigmaHDT)
}
source("R/cCFR_calculation.R")
source("R/plotting_functions.R")
ChinaData <- subset(allTogetherInternational, country == "China")
JapanData <- subset(allTogetherInternational, country == "Japan")
KoreaData <- subset(allTogetherInternational, country == "South Korea")
IranData  <- subset(allTogetherInternational, country == "Iran")
ItalyData <- subset(allTogetherInternational, country == "Italy")
master_plot(allTogetherInferred, 1, 48, "topleft", hospitalisation_to_death)
source("R/plotting_functions.R")
master_plot(JapanData, 1, 1, "top", hospitalisation_to_death)
source("R/plotting_functions.R")
master_plot(JapanData, 1, 1, "top", hospitalisation_to_death)
