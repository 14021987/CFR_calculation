scaled_reporting <- 65 # scaling factor (from Kucharski et al 2020)
cfr_from_date <- as.Date("2020-01-26") # set date to show CFR from
cfr_current_date <- max(all_dat$date) # set max date in data
cfr_max_date <- max(all_dat$date)
# Period to use for extrapolation (for convergence calculation only NOT forecast)
extrapolate_use_days <- 7 # Use 7 day growth trend to extrapolate from
extrapolate_length <- 14 # days to extrapolate
source("R/extrapolate_data.R")
# Plot data ---------------------------------------------------------------
plot_cfr_basic(all_dat2)
# Load and format data ----------------------------------------------------
# Calculate mean recent growth
extrapolate_data <- function(xx,extrapolate_use_days,extrapolate_length){
length_xx <- length(xx)
pick_end <- (length_xx - min(extrapolate_use_days,length_xx) + 1):length_xx
pick_xx <- xx[pick_end] # Extract data from window
# Fit simple linear regression
log_yy <- log(pick_xx); length_yy <- length(log_yy)
model_1 <- lm(log_yy ~ pick_end)
param_1 <- model_1$coefficients[1] %>% as.numeric()
param_2 <- model_1$coefficients[2] %>% as.numeric()
# Output extrapolated values
extrapolate_vals <- exp(param_1 + ((length_xx+1):(length_xx+extrapolate_length))*param_2)
extrapolate_vals %>% round() # make integers
}
# Output new values
# Add entries for book-keeping
extra_entries <- (matrix(NA,nrow=extrapolate_length,ncol=ncol(all_dat)) %>% as_tibble()); names(extra_entries) <- names(all_dat)
all_dat2 <- rbind(all_dat,extra_entries)
all_dat2[(nrow(all_dat)+1):(nrow(all_dat)+extrapolate_length),]$date <- max(all_dat$date) + c(1:extrapolate_length)
# Run incidence calculations
all_dat2$new_cases_china     <- extrapolate_data(all_dat$new_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2$new_deaths_china    <- extrapolate_data(all_dat$new_deaths_china,extrapolate_use_days,extrapolate_length)
all_dat2$new_sev_cases_china <- extrapolate_data(all_dat$new_sev_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2$new_cases_outside   <- extrapolate_data(all_dat$new_cases_outside,extrapolate_use_days,extrapolate_length)
all_dat2$new_deaths_outside  <- extrapolate_data(all_dat$new_deaths_outside,extrapolate_use_days,extrapolate_length)
all_dat2$new_cases_china
final_pick <- (nrow(all_dat)+1):(nrow(all_dat)+extrapolate_length)
final_pick
all_dat2[final_pick,]$new_cases_china     <- extrapolate_data(all_dat$new_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_deaths_china    <- extrapolate_data(all_dat$new_deaths_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_sev_cases_china <- extrapolate_data(all_dat$new_sev_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_cases_outside   <- extrapolate_data(all_dat$new_cases_outside,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_deaths_outside  <- extrapolate_data(all_dat$new_deaths_outside,extrapolate_use_days,extrapolate_length)
# Calculate cumulative
all_dat2$cumulative_cases_china     <- cumsum(all_dat2$new_cases_china)
all_dat2$cumulative_deaths_china    <- cumsum(all_dat2$new_deaths_china)
all_dat2$cumulative_sev_cases_china <- cumsum(all_dat2$new_sev_cases_china)
all_dat2$cumulative_cases_outside   <- cumsum(all_dat2$new_cases_outside )
all_dat2$cumulative_deaths_outside  <- cumsum(all_dat2$new_deaths_outside)
library(tidyverse)
# - - -
# Set user-specific directory path and load datasets
if(Sys.info()["user"]=="adamkuchars" | Sys.info()["user"]=="adamkucharski") {
setwd("~/Documents/GitHub/CFR_calculation/")
}
# Load data and functions ---------------------------------------------------------------
source("R/functions.R")
source("R/format_data.R")
# Define onset-to-death distribution
# 9.1 day onset-to-hospitalisation in Li et al NEJM paper
meanG <- 13.8
scaleG <- 1
onset_to_death <- function(x){ dgamma(x, meanG/scaleG, scale = scaleG) }
meanH <- 9.1
scaleH <- 1
onset_to_hosp <- function(x){ dgamma(x, meanH/scaleH, scale = scaleH) }
scaled_reporting <- 65 # scaling factor (from Kucharski et al 2020)
cfr_from_date <- as.Date("2020-01-26") # set date to show CFR from
cfr_current_date <- max(all_dat$date) # set max date in data
cfr_max_date <- max(all_dat$date)
# Period to use for extrapolation (for convergence calculation only NOT forecast)
extrapolate_use_days <- 7 # Use 7 day growth trend to extrapolate from
extrapolate_length <- 14 # days to extrapolate
source("R/extrapolate_data.R")
# Plot data ---------------------------------------------------------------
plot_cfr_basic(all_dat2)
# Load and format data ----------------------------------------------------
# Calculate mean recent growth
extrapolate_data <- function(xx,extrapolate_use_days,extrapolate_length){
length_xx <- length(xx)
pick_end <- (length_xx - min(extrapolate_use_days,length_xx) + 1):length_xx
pick_xx <- xx[pick_end] # Extract data from window
# Fit simple linear regression
log_yy <- log(pick_xx); length_yy <- length(log_yy)
model_1 <- lm(log_yy ~ pick_end)
param_1 <- model_1$coefficients[1] %>% as.numeric()
param_2 <- model_1$coefficients[2] %>% as.numeric()
# Output extrapolated values
extrapolate_vals <- exp(param_1 + ((length_xx+1):(length_xx+extrapolate_length))*param_2)
extrapolate_vals %>% round() # make integers
}
# Output new values
# Add entries for book-keeping
extra_entries <- (matrix(NA,nrow=extrapolate_length,ncol=ncol(all_dat)) %>% as_tibble()); names(extra_entries) <- names(all_dat)
all_dat2 <- rbind(all_dat,extra_entries)
final_pick <- (nrow(all_dat)+1):(nrow(all_dat)+extrapolate_length)
all_dat2[,]$date <- max(all_dat$date) + c(1:extrapolate_length)
# Run incidence calculations
all_dat2[final_pick,]$new_cases_china     <- extrapolate_data(all_dat$new_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_deaths_china    <- extrapolate_data(all_dat$new_deaths_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_sev_cases_china <- extrapolate_data(all_dat$new_sev_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_cases_outside   <- extrapolate_data(all_dat$new_cases_outside,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_deaths_outside  <- extrapolate_data(all_dat$new_deaths_outside,extrapolate_use_days,extrapolate_length)
# Calculate cumulative
all_dat2$cumulative_cases_china     <- cumsum(all_dat2$new_cases_china)
all_dat2$cumulative_deaths_china    <- cumsum(all_dat2$new_deaths_china)
all_dat2$cumulative_sev_cases_china <- cumsum(all_dat2$new_sev_cases_china)
all_dat2$cumulative_cases_outside   <- cumsum(all_dat2$new_cases_outside )
all_dat2$cumulative_deaths_outside  <- cumsum(all_dat2$new_deaths_outside)
library(tidyverse)
# - - -
# Set user-specific directory path and load datasets
if(Sys.info()["user"]=="adamkuchars" | Sys.info()["user"]=="adamkucharski") {
setwd("~/Documents/GitHub/CFR_calculation/")
}
# Load data and functions ---------------------------------------------------------------
source("R/functions.R")
source("R/format_data.R")
# Define onset-to-death distribution
# 9.1 day onset-to-hospitalisation in Li et al NEJM paper
meanG <- 13.8
scaleG <- 1
onset_to_death <- function(x){ dgamma(x, meanG/scaleG, scale = scaleG) }
meanH <- 9.1
scaleH <- 1
onset_to_hosp <- function(x){ dgamma(x, meanH/scaleH, scale = scaleH) }
scaled_reporting <- 65 # scaling factor (from Kucharski et al 2020)
cfr_from_date <- as.Date("2020-01-26") # set date to show CFR from
cfr_current_date <- max(all_dat$date) # set max date in data
cfr_max_date <- max(all_dat$date)
# Period to use for extrapolation (for convergence calculation only NOT forecast)
extrapolate_use_days <- 7 # Use 7 day growth trend to extrapolate from
extrapolate_length <- 14 # days to extrapolate
source("R/extrapolate_data.R")
# Plot data ---------------------------------------------------------------
plot_cfr_basic(all_dat2)
library(tidyverse)
# - - -
# Set user-specific directory path and load datasets
if(Sys.info()["user"]=="adamkuchars" | Sys.info()["user"]=="adamkucharski") {
setwd("~/Documents/GitHub/CFR_calculation/")
}
# Load data and functions ---------------------------------------------------------------
source("R/functions.R")
source("R/format_data.R")
# Define onset-to-death distribution
# 9.1 day onset-to-hospitalisation in Li et al NEJM paper
meanG <- 13.8
scaleG <- 1
onset_to_death <- function(x){ dgamma(x, meanG/scaleG, scale = scaleG) }
meanH <- 9.1
scaleH <- 1
onset_to_hosp <- function(x){ dgamma(x, meanH/scaleH, scale = scaleH) }
scaled_reporting <- 65 # scaling factor (from Kucharski et al 2020)
cfr_from_date <- as.Date("2020-01-26") # set date to show CFR from
cfr_current_date <- max(all_dat$date) # set max date in data
cfr_max_date <- max(all_dat$date)
# Period to use for extrapolation (for convergence calculation only NOT forecast)
extrapolate_use_days <- 7 # Use 7 day growth trend to extrapolate from
extrapolate_length <- 14 # days to extrapolate
# Load and format data ----------------------------------------------------
# Calculate mean recent growth
extrapolate_data <- function(xx,extrapolate_use_days,extrapolate_length){
length_xx <- length(xx)
pick_end <- (length_xx - min(extrapolate_use_days,length_xx) + 1):length_xx
pick_xx <- xx[pick_end] # Extract data from window
# Fit simple linear regression
log_yy <- log(pick_xx); length_yy <- length(log_yy)
model_1 <- lm(log_yy ~ pick_end)
param_1 <- model_1$coefficients[1] %>% as.numeric()
param_2 <- model_1$coefficients[2] %>% as.numeric()
# Output extrapolated values
extrapolate_vals <- exp(param_1 + ((length_xx+1):(length_xx+extrapolate_length))*param_2)
extrapolate_vals %>% round() # make integers
}
# Add entries for book-keeping
extra_entries <- (matrix(NA,nrow=extrapolate_length,ncol=ncol(all_dat)) %>% as_tibble()); names(extra_entries) <- names(all_dat)
all_dat2 <- rbind(all_dat,extra_entries)
final_pick <- (nrow(all_dat)+1):(nrow(all_dat)+extrapolate_length)
all_dat2[,]$date <- max(all_dat$date) + c(1:extrapolate_length)
all_dat2
# Add entries for book-keeping
extra_entries <- (matrix(NA,nrow=extrapolate_length,ncol=ncol(all_dat)) %>% as_tibble()); names(extra_entries) <- names(all_dat)
all_dat2 <- rbind(all_dat,extra_entries)
final_pick <- (nrow(all_dat)+1):(nrow(all_dat)+extrapolate_length)
all_dat2[,]$date <- max(all_dat$date) + c(1:extrapolate_length)
all_dat2[,]$date
max(all_dat$date) + c(1:extrapolate_length)
# Add entries for book-keeping
extra_entries <- (matrix(NA,nrow=extrapolate_length,ncol=ncol(all_dat)) %>% as_tibble()); names(extra_entries) <- names(all_dat)
all_dat2 <- rbind(all_dat,extra_entries)
final_pick <- (nrow(all_dat)+1):(nrow(all_dat)+extrapolate_length)
all_dat2[final_pick,]$date <- max(all_dat$date) + c(1:extrapolate_length)
# Run incidence calculations
all_dat2[final_pick,]$new_cases_china     <- extrapolate_data(all_dat$new_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_deaths_china    <- extrapolate_data(all_dat$new_deaths_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_sev_cases_china <- extrapolate_data(all_dat$new_sev_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_cases_outside   <- extrapolate_data(all_dat$new_cases_outside,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_deaths_outside  <- extrapolate_data(all_dat$new_deaths_outside,extrapolate_use_days,extrapolate_length)
# Calculate cumulative
all_dat2$cumulative_cases_china     <- cumsum(all_dat2$new_cases_china)
all_dat2$cumulative_deaths_china    <- cumsum(all_dat2$new_deaths_china)
all_dat2$cumulative_sev_cases_china <- cumsum(all_dat2$new_sev_cases_china)
all_dat2$cumulative_cases_outside   <- cumsum(all_dat2$new_cases_outside )
all_dat2$cumulative_deaths_outside  <- cumsum(all_dat2$new_deaths_outside)
tail(all_dat2)
all_dat2$new_cases_china
all_dat2$cumulative_cases_china
all_dat2
max(all_dat$cumulative_cases_china))
max(all_dat$cumulative_cases_china)
tail(all_dat$cumulative_cases_china)
tail(all_dat$cumulative_cases_china,1)
# Load and format data ----------------------------------------------------
# Calculate mean recent growth
extrapolate_data <- function(xx,extrapolate_use_days,extrapolate_length){
length_xx <- length(xx)
pick_end <- (length_xx - min(extrapolate_use_days,length_xx) + 1):length_xx
pick_xx <- xx[pick_end] # Extract data from window
# Fit simple linear regression
log_yy <- log(pick_xx); length_yy <- length(log_yy)
model_1 <- lm(log_yy ~ pick_end)
param_1 <- model_1$coefficients[1] %>% as.numeric()
param_2 <- model_1$coefficients[2] %>% as.numeric()
# Output extrapolated values
extrapolate_vals <- exp(param_1 + ((length_xx+1):(length_xx+extrapolate_length))*param_2)
extrapolate_vals %>% round() # make integers
}
# Output new values
# Add entries for book-keeping
extra_entries <- (matrix(NA,nrow=extrapolate_length,ncol=ncol(all_dat)) %>% as_tibble()); names(extra_entries) <- names(all_dat)
all_dat2 <- rbind(all_dat,extra_entries)
final_pick <- (nrow(all_dat)+1):(nrow(all_dat)+extrapolate_length)
all_dat2[final_pick,]$date <- max(all_dat$date) + c(1:extrapolate_length)
# Run incidence calculations
all_dat2[final_pick,]$new_cases_china     <- extrapolate_data(all_dat$new_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_deaths_china    <- extrapolate_data(all_dat$new_deaths_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_sev_cases_china <- extrapolate_data(all_dat$new_sev_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_cases_outside   <- extrapolate_data(all_dat$new_cases_outside,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_deaths_outside  <- extrapolate_data(all_dat$new_deaths_outside,extrapolate_use_days,extrapolate_length)
# Calculate cumulative
all_dat2[final_pick,]$cumulative_cases_china     <- tail(all_dat$cumulative_cases_china,1) + cumsum(all_dat2[final_pick,]$new_cases_china)
all_dat2[final_pick,]$cumulative_deaths_china    <- tail(all_dat$cumulative_deaths_china,1) + cumsum(all_dat2[final_pick,]$new_deaths_china)
all_dat2[final_pick,]$cumulative_sev_cases_china <- tail(all_dat$cumulative_sev_cases_china,1) + cumsum(all_dat2[final_pick,]$new_sev_cases_china)
all_dat2[final_pick,]$cumulative_cases_outside   <- tail(all_dat$cumulative_cases_outside,1) + cumsum(all_dat2[final_pick,]$new_cases_outside )
all_dat2[final_pick,]$cumulative_deaths_outside  <- tail(all_dat$cumulative_deaths_outside,1) + cumsum(all_dat2[final_pick,]$new_deaths_outside)
tail(all_dat2)
all_dat2[final_pick,]$cumulative_cases_china
all_dat2$cumulative_cases_china
library(tidyverse)
# - - -
# Set user-specific directory path and load datasets
if(Sys.info()["user"]=="adamkuchars" | Sys.info()["user"]=="adamkucharski") {
setwd("~/Documents/GitHub/CFR_calculation/")
}
# Load data and functions ---------------------------------------------------------------
source("R/functions.R")
source("R/format_data.R")
# Define onset-to-death distribution
# 9.1 day onset-to-hospitalisation in Li et al NEJM paper
meanG <- 13.8
scaleG <- 1
onset_to_death <- function(x){ dgamma(x, meanG/scaleG, scale = scaleG) }
meanH <- 9.1
scaleH <- 1
onset_to_hosp <- function(x){ dgamma(x, meanH/scaleH, scale = scaleH) }
scaled_reporting <- 65 # scaling factor (from Kucharski et al 2020)
cfr_from_date <- as.Date("2020-01-26") # set date to show CFR from
cfr_current_date <- max(all_dat$date) # set max date in data
cfr_max_date <- max(all_dat$date)
# Period to use for extrapolation (for convergence calculation only NOT forecast)
extrapolate_use_days <- 7 # Use 7 day growth trend to extrapolate from
extrapolate_length <- 14 # days to extrapolate
source("R/extrapolate_data.R")
# Plot data ---------------------------------------------------------------
plot_cfr_basic(all_dat2)
main_data_in <- all_dat2
# Load data and omit initial missing entries
data_1 <- main_data_in[!is.na(all_dat$new_cases_china),]
data_1 <- data_1 %>% mutate(cases = scaled_reporting*new_cases_china,
deaths = new_deaths_china) # scale up based on exported case estimates
# Load data and omit initial missing entries
data_1 <- main_data_in[!is.na(main_data_in$new_cases_china),]
data_1 <- data_1 %>% mutate(cases = scaled_reporting*new_cases_china,
deaths = new_deaths_china) # scale up based on exported case estimates
# - -
# Estimate fatality risk
# Check have enough of distribution
distn_needed <- sum(cumsum(onset_to_death(0:30))<=0.95) # make sure have at 95% of the cumulative distn
# Calculate adjusted CFR
mov_window <- distn_needed
store_cfr <- NULL
for(tt in 1:nrow(data_1)){
store_cfr <- rbind(store_cfr,scale_cfr(data_1[max(0,tt-mov_window):tt,],delay_fun = onset_to_death))
}
store_cfr <- as_tibble(store_cfr); names(store_cfr) <- c("naive","cCFR","deaths","known_outcomes","cases")
# - -
# Estimate severity risk
# Check have enough of distribution
distn_needed <- sum(cumsum(onset_to_hosp(0:30))<=0.95) # make sure have at 95% of the cumulative distn
# Calculate adjusted severity risk
mov_window <- distn_needed
data_2 <- data_1;
data_2 <- data_2 %>% mutate(cases = new_cases_china,
deaths = new_sev_cases_china) # scale up based on exported case estimates
data_2 <- data_2[!is.na(data_2$new_sev_cases_china),]# omit NAs
store_sev <- NULL
for(tt in 1:nrow(data_2)){
store_sev <- rbind(store_sev,scale_cfr(data_2[max(0,tt-mov_window):tt,],delay_fun = onset_to_hosp))
}
store_sev <- as_tibble(store_sev); names(store_sev) <- c("naive","cCFR","severe","known_outcomes","cases")
# - - -
# Calculate final CI and output
tt_max <- nrow(data_1)
CI_nCFR_raw <- c.input.text(bin_conf(data_1[tt_max,]$cumulative_deaths_china,data_1[tt_max,]$cumulative_cases_china))
CI_nCFR <- c.input.text(bin_conf(data_1[tt_max,]$cumulative_deaths_china,scaled_reporting*data_1[tt_max,]$cumulative_cases_china))
CI_cCFR <- c.input.text(bin_conf(store_cfr[tt_max,]$deaths,store_cfr[tt_max,]$known_outcomes))
output_estimates <- rbind(c("Naive CFR (raw data)",CI_nCFR_raw),
c("Naive CFR (scaled data)",CI_nCFR),
c("Adjusted CFR (scaled data)",CI_cCFR))
output_estimates <- as_tibble(output_estimates)
names(output_estimates) <- c("Data/method","Estimate")
write_csv(output_estimates,paste0("plots/cfr_table_scale_",scaled_reporting,"_mean_",meanG,"_",tail(data_1,1)$date,".csv"))
CI_nCFR_raw <- c.input.text(bin_conf(data_1[tt_max,]$cumulative_deaths_china,data_1[tt_max,]$cumulative_cases_china))
data_1
data_1[tt_max,]$cumulative_deaths_china
tail)data_1
tail(data_1)
data_1$cumulative_deaths_china
tail(all_dat$cumulative_deaths_china,1)
cumsum(all_dat2[final_pick,]$new_deaths_china)
all_dat2[final_pick,]$cumulative_deaths_china
final_pick
# Load and format data ----------------------------------------------------
# Calculate mean recent growth
extrapolate_data <- function(xx,extrapolate_use_days,extrapolate_length){
length_xx <- length(xx)
pick_end <- (length_xx - min(extrapolate_use_days,length_xx) + 1):length_xx
pick_xx <- xx[pick_end] # Extract data from window
# Fit simple linear regression
log_yy <- log(pick_xx); length_yy <- length(log_yy)
model_1 <- lm(log_yy ~ pick_end)
param_1 <- model_1$coefficients[1] %>% as.numeric()
param_2 <- model_1$coefficients[2] %>% as.numeric()
# Output extrapolated values
extrapolate_vals <- exp(param_1 + ((length_xx+1):(length_xx+extrapolate_length))*param_2)
extrapolate_vals %>% round() # make integers
}
# Output new values
# Add entries for book-keeping
extra_entries <- (matrix(NA,nrow=extrapolate_length,ncol=ncol(all_dat)) %>% as_tibble()); names(extra_entries) <- names(all_dat)
all_dat2 <- rbind(all_dat,extra_entries)
final_pick <- (nrow(all_dat)+1):(nrow(all_dat)+extrapolate_length)
all_dat2[final_pick,]$date <- max(all_dat$date) + c(1:extrapolate_length)
# Run incidence calculations
all_dat2[final_pick,]$new_cases_china     <- extrapolate_data(all_dat$new_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_deaths_china    <- extrapolate_data(all_dat$new_deaths_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_sev_cases_china <- extrapolate_data(all_dat$new_sev_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_cases_outside   <- extrapolate_data(all_dat$new_cases_outside,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_deaths_outside  <- extrapolate_data(all_dat$new_deaths_outside,extrapolate_use_days,extrapolate_length)
# Calculate cumulative
all_dat2[final_pick,]$cumulative_cases_china     <- tail(all_dat$cumulative_cases_china,1) + cumsum(all_dat2[final_pick,]$new_cases_china)
all_dat2[final_pick,]$cumulative_deaths_china    <- tail(all_dat$cumulative_deaths_china,1) + cumsum(all_dat2[final_pick,]$new_deaths_china)
all_dat2[final_pick,]$cumulative_sev_cases_china <- tail(all_dat$cumulative_sev_cases_china,1) + cumsum(all_dat2[final_pick,]$new_sev_cases_china)
all_dat2[final_pick,]$cumulative_cases_outside   <- tail(all_dat$cumulative_cases_outside,1) + cumsum(all_dat2[final_pick,]$new_cases_outside )
all_dat2[final_pick,]$cumulative_deaths_outside  <- tail(all_dat$cumulative_deaths_outside,1) + cumsum(all_dat2[final_pick,]$new_deaths_outside)
all_dat2[final_pick,]$cumulative_cases_china     <- tail(all_dat$cumulative_cases_china,1) + cumsum(all_dat2[final_pick,]$new_cases_china)
all_dat2[final_pick,]$cumulative_deaths_china
all_dat2[final_pick,]$cumulative_deaths_china
library(tidyverse)
# - - -
# Set user-specific directory path and load datasets
if(Sys.info()["user"]=="adamkuchars" | Sys.info()["user"]=="adamkucharski") {
setwd("~/Documents/GitHub/CFR_calculation/")
}
# Load data and functions ---------------------------------------------------------------
source("R/functions.R")
source("R/format_data.R")
# Define onset-to-death distribution
# 9.1 day onset-to-hospitalisation in Li et al NEJM paper
meanG <- 13.8
scaleG <- 1
onset_to_death <- function(x){ dgamma(x, meanG/scaleG, scale = scaleG) }
meanH <- 9.1
scaleH <- 1
onset_to_hosp <- function(x){ dgamma(x, meanH/scaleH, scale = scaleH) }
scaled_reporting <- 65 # scaling factor (from Kucharski et al 2020)
cfr_from_date <- as.Date("2020-01-26") # set date to show CFR from
cfr_current_date <- max(all_dat$date) # set max date in data
cfr_max_date <- max(all_dat$date)
# Period to use for extrapolation (for convergence calculation only NOT forecast)
extrapolate_use_days <- 7 # Use 7 day growth trend to extrapolate from
extrapolate_length <- 14 # days to extrapolate
source("R/extrapolate_data.R")
all_dat2[final_pick,]$cumulative_deaths_china
# Load and format data ----------------------------------------------------
# Calculate mean recent growth
extrapolate_data <- function(xx,extrapolate_use_days,extrapolate_length){
length_xx <- length(xx)
pick_end <- (length_xx - min(extrapolate_use_days,length_xx) + 1):length_xx
pick_xx <- xx[pick_end] # Extract data from window
# Fit simple linear regression
log_yy <- log(pick_xx); length_yy <- length(log_yy)
model_1 <- lm(log_yy ~ pick_end)
param_1 <- model_1$coefficients[1] %>% as.numeric()
param_2 <- model_1$coefficients[2] %>% as.numeric()
# Output extrapolated values
extrapolate_vals <- exp(param_1 + ((length_xx+1):(length_xx+extrapolate_length))*param_2)
extrapolate_vals %>% round() # make integers
}
# Output new values
# Add entries for book-keeping
extra_entries <- (matrix(NA,nrow=extrapolate_length,ncol=ncol(all_dat)) %>% as_tibble()); names(extra_entries) <- names(all_dat)
all_dat2 <- rbind(all_dat,extra_entries)
final_pick <- (nrow(all_dat)+1):(nrow(all_dat)+extrapolate_length)
all_dat2[final_pick,]$date <- max(all_dat$date) + c(1:extrapolate_length)
# Run incidence calculations
all_dat2[final_pick,]$new_cases_china     <- extrapolate_data(all_dat$new_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_deaths_china    <- extrapolate_data(all_dat$new_deaths_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_sev_cases_china <- extrapolate_data(all_dat$new_sev_cases_china,extrapolate_use_days,extrapolate_length)
all_dat2[final_pick,]$new_cases_outside   <- extrapolate_data(all_dat$new_cases_outside,extrapolate_use_days,extrapolate_length)
#all_dat2[final_pick,]$new_deaths_outside  <- extrapolate_data(all_dat$new_deaths_outside,extrapolate_use_days,extrapolate_length)
# Calculate cumulative
all_dat2[final_pick,]$cumulative_cases_china     <- tail(all_dat$cumulative_cases_china,1) + cumsum(all_dat2[final_pick,]$new_cases_china)
all_dat2[final_pick,]$cumulative_deaths_china    <- tail(all_dat$cumulative_deaths_china,1) + cumsum(all_dat2[final_pick,]$new_deaths_china)
all_dat2[final_pick,]$cumulative_sev_cases_china <- tail(all_dat$cumulative_sev_cases_china,1) + cumsum(all_dat2[final_pick,]$new_sev_cases_china)
all_dat2[final_pick,]$cumulative_cases_outside   <- tail(all_dat$cumulative_cases_outside,1) + cumsum(all_dat2[final_pick,]$new_cases_outside )
all_dat2[final_pick,]$cumulative_deaths_outside  <- tail(all_dat$cumulative_deaths_outside,1) + cumsum(all_dat2[final_pick,]$new_deaths_outside)
library(tidyverse)
# - - -
# Set user-specific directory path and load datasets
if(Sys.info()["user"]=="adamkuchars" | Sys.info()["user"]=="adamkucharski") {
setwd("~/Documents/GitHub/CFR_calculation/")
}
# Load data and functions ---------------------------------------------------------------
source("R/functions.R")
source("R/format_data.R")
# Define onset-to-death distribution
# 9.1 day onset-to-hospitalisation in Li et al NEJM paper
meanG <- 13.8
scaleG <- 1
onset_to_death <- function(x){ dgamma(x, meanG/scaleG, scale = scaleG) }
meanH <- 9.1
scaleH <- 1
onset_to_hosp <- function(x){ dgamma(x, meanH/scaleH, scale = scaleH) }
scaled_reporting <- 65 # scaling factor (from Kucharski et al 2020)
cfr_from_date <- as.Date("2020-01-26") # set date to show CFR from
cfr_current_date <- max(all_dat$date) # set max date in data
cfr_max_date <- max(all_dat$date)
# Period to use for extrapolation (for convergence calculation only NOT forecast)
extrapolate_use_days <- 7 # Use 7 day growth trend to extrapolate from
extrapolate_length <- 14 # days to extrapolate
source("R/extrapolate_data.R")
# Plot data ---------------------------------------------------------------
plot_cfr_basic(all_dat2)
cfr_current_date
cfr_max_date
library(tidyverse)
# - - -
# Set user-specific directory path and load datasets
if(Sys.info()["user"]=="adamkuchars" | Sys.info()["user"]=="adamkucharski") {
setwd("~/Documents/GitHub/CFR_calculation/")
}
# Load data and functions ---------------------------------------------------------------
source("R/functions.R")
source("R/format_data.R")
# Define onset-to-death distribution
# 9.1 day onset-to-hospitalisation in Li et al NEJM paper
meanG <- 13.8
scaleG <- 1
onset_to_death <- function(x){ dgamma(x, meanG/scaleG, scale = scaleG) }
meanH <- 9.1
scaleH <- 1
onset_to_hosp <- function(x){ dgamma(x, meanH/scaleH, scale = scaleH) }
# Period to use for extrapolation (for convergence calculation only NOT forecast)
extrapolate_use_days <- 7 # Use 7 day growth trend to extrapolate from
extrapolate_length <- 14 # days to extrapolate
scaled_reporting <- 65 # scaling factor (from Kucharski et al 2020)
cfr_from_date <- as.Date("2020-01-26") # set date to show CFR from
cfr_current_date <- max(all_dat$date) # set max date in data
cfr_max_date <- max(all_dat$date) + extrapolate_length
source("R/extrapolate_data.R")
# Plot data ---------------------------------------------------------------
plot_cfr_basic(all_dat2)
library(tidyverse)
# - - -
# Set user-specific directory path and load datasets
if(Sys.info()["user"]=="adamkuchars" | Sys.info()["user"]=="adamkucharski") {
setwd("~/Documents/GitHub/CFR_calculation/")
}
# Load data and functions ---------------------------------------------------------------
source("R/functions.R")
source("R/format_data.R")
# Define onset-to-death distribution
# 9.1 day onset-to-hospitalisation in Li et al NEJM paper
meanG <- 13.8
scaleG <- 1
onset_to_death <- function(x){ dgamma(x, meanG/scaleG, scale = scaleG) }
meanH <- 9.1
scaleH <- 1
onset_to_hosp <- function(x){ dgamma(x, meanH/scaleH, scale = scaleH) }
# Period to use for extrapolation (for convergence calculation only NOT forecast)
extrapolate_use_days <- 7 # Use 7 day growth trend to extrapolate from
extrapolate_length <- 14 # days to extrapolate
scaled_reporting <- 65 # scaling factor (from Kucharski et al 2020)
cfr_from_date <- as.Date("2020-01-26") # set date to show CFR from
cfr_current_date <- max(all_dat$date) # set max date in data
cfr_max_date <- max(all_dat$date) + extrapolate_length
source("R/extrapolate_data.R")
# Plot data ---------------------------------------------------------------
plot_cfr_basic(all_dat2)
